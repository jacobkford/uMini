@model LockoutViewModel
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Lockout";
    var user = await UserManager.FindByIdAsync(Model.UserId);
    var userRoles = await UserManager.GetRolesAsync(user);
}

<!-- Header -->
<div class="px-sm-5 py-4">
    <div class="container">
        <div class="row justify-content-between align-items-center">
            <!-- Title -->
            <div class="col">
                <h1 class="mb-0 h3">@ViewData["Title"]</h1> 
            </div>
            <!-- Remove Button -->
            <div class="col d-flex justify-content-end m-auto">
                <a 
                    class="btn btn-primary @Html.DisabledIf(!UserManager.IsLockedOut(user))"
                    data-mdb-toggle="modal" 
                    data-mdb-target="#removeLockoutModal" 
                    data-id="@Model.UserId"
                >
                    <span class="pe-1">
                        <i class="fas fa-unlock"></i> &nbsp; Remove Lockout
                    </span>
                </a>
            </div>
        </div>
    </div>
</div>
<!-- Content -->
<div class="container-fluid px-sm-5">
    <div class="row">
        <div class="col-12">
            <!-- Card -->
            <div class="card mb-4 bg-white">
                <form method="post">
                    <!-- Card Body -->
                    <div class="card-body px-4">
                        @await Component.InvokeAsync("AdminDashboardUserCardHeader", Model.UserId)
                        <hr />
                        <div class="row pt-3">
                            <div class="col-md-6 mb-3">
                                <!-- Lockout Expiration Date Input -->
                                <div class="input-group form-outline">
                                    <span class="input-group-text" id="dateTimePickerAddon">
                                        <i class="fas fa-calendar-times"></i>
                                    </span>
                                    @{
                                        var datetime = Model.EndDate.HasValue ? $"{Model.EndDate.Value:dd/MM/yyyy HH:mm}" : "";
                                    }
                                    <input 
                                        asp-for="EndDate" 
                                        asp-format="{0:dd/MM/yyyy HH:mm}"
                                        type="text" 
                                        class="form-control" 
                                        aria-label="Date Time Picker" 
                                        aria-describedby="dateTimePickerAddon"
                                        id="dateTimePicker"
                                        data-datetime="@datetime"
                                        value="@datetime"
                                    >
                                    <label asp-for="EndDate" class="form-label"></label>
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>
                                
                            </div>
                            <div class="col-md-6 mb-3">
                                <!-- Lockout Authorised By Visual Data -->
                                <div class="form-outline">
                                    @{
                                        var authorisedUser = await UserManager.FindByIdAsync(Model.AuthorisedById);
                                        var authorisedUsername = authorisedUser is not null ? authorisedUser.UserName : string.Empty;
                                    }
                                    <input 
                                        id="authorisedByInputDisplay" 
                                        type="text" 
                                        name="authorisedByDisplay" 
                                        class="form-control" 
                                        value="@authorisedUsername" 
                                        readonly
                                    >
                                    <label for="authorisedByInputDisplay" class="form-label">Authorised By</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-outline">
                                    <!-- Lockout Reason Input -->
                                    <textarea asp-for="Reason" class="form-control mb-3">@Model.Reason</textarea>
                                    <label asp-for="Reason" class="form-label">Reason</label>
                                    <span asp-validation-for="Reason" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <!-- User Hidden Inputs -->
                        <input asp-for="UserId" type="hidden" value="@user.Id" />
                        <input asp-for="AuthorisedById" type="hidden" value="@UserManager.GetUserId(User)" />
                    </div>
                    <div class="card-footer bg-white" style="border-top: none;">
                        <a asp-area="Admin" asp-controller="Users" asp-action="Index" class="btn btn-light">
                            Go Back
                        </a>    
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<partial name="_RemoveLockoutModal" />

@section Styles {
    <link rel="stylesheet" href="~/lib/jquery-datetimepicker/build/jquery.datetimepicker.min.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/lib/jquery-datetimepicker/build/jquery.datetimepicker.full.min.js"></script>
    <script src="~/js/timezone-offset-cookie.js"></script>
    <script src="~/js/admin-users-lockout.js"></script>
}
